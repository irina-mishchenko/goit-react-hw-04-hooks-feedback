{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/Section/Section.module.css","Components/FeedbackOptions/FeedbackOptions.module.css","Components/Notification/Notification.module.css","Components/Statistics/Statistics.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Section/Section.js","Components/Notification/Notification.js","Components/App.js","index.js"],"names":["module","exports","Statictics","good","neutral","bad","total","positivePercentage","className","s","statisticsItem","FeedbackOptions","options","onLeaveFeedback","map","option","button","type","data-name","onClick","Object","keys","Section","title","children","container","Notification","message","text","App","useState","setGood","setNeutral","setBad","isShowStatistics","positiveFeedbackPercentage","Math","round","countPositiveFeedbackPercentage","name","target","dataset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,eAAiB,qC,kBCAnCD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,iBCAjED,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,KAAO,6B,2GCyBVC,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,oCACE,oBAAGC,UAAWC,IAAEC,eAAhB,mBAAuCP,KACvC,oBAAGK,UAAWC,IAAEC,eAAhB,sBAA0CN,KAC1C,oBAAGI,UAAWC,IAAEC,eAAhB,kBAAsCL,KACtC,oBAAGG,UAAWC,IAAEC,eAAhB,oBAAwCJ,KACxC,oBAAGE,UAAWC,IAAEC,eAAhB,gCACsBH,EADtB,W,gBCgBSI,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEP,UAAWC,IAAEO,OACbC,KAAK,SACLC,YAAWH,EACXI,QAASN,EAJX,SAOGE,GAFIK,OAAOC,KAAKT,U,gBCKZU,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAAShB,UAAWC,IAAEgB,UAAtB,UACE,oBAAIjB,UAAWC,IAAEc,MAAjB,SAAyBA,IACxBC,M,gBCIQE,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGnB,UAAWC,IAAEmB,KAAhB,SAAuBD,KCCjB,SAASE,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrB3B,EADqB,KACf4B,EADe,OAEED,mBAAS,GAFX,mBAErB1B,EAFqB,KAEZ4B,EAFY,OAGNF,mBAAS,GAHH,mBAGrBzB,EAHqB,KAGhB4B,EAHgB,KAwBtB3B,EAPGH,EAAOC,EAAUC,EAQpB6B,EAAmB5B,EAAQ,EAC3B6B,EANkC,SAAA7B,GACtC,OAAO8B,KAAKC,MAAOlC,EAAOG,EAAS,KAKFgC,CAAgChC,GAEnE,OACE,gCACE,cAAC,EAAD,CAASiB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA5BgB,SAAC,GAAgB,IACjC0B,EADgC,EAAbC,OACLC,QAAQF,KACf,SAATA,EACFR,GAAQ,SAAA5B,GAAI,OAAIA,EAAO,KACL,YAAToC,EACTP,GAAW,SAAA5B,GAAO,OAAIA,EAAU,KACd,QAATmC,GACTN,GAAO,SAAA5B,GAAG,OAAIA,EAAM,UAyBpB,cAAC,EAAD,CAASkB,MAAM,aAAf,SACGW,EACC,cAAC,EAAD,CACE/B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoB4B,IAGtB,cAAC,EAAD,CAAcR,QAAQ,2BCjDhCe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,W","file":"static/js/main.952f91a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsItem\":\"Statistics_statisticsItem__1b0NE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__3atf9\",\"title\":\"Section_title__3Y3p5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1ZiO-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__23kug\"};","import propTypes from 'prop-types';\n\nimport s from './Statistics.module.css';\n\nconst Statictics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <section>\n      <p className={s.statisticsItem}>Good: {good}</p>\n      <p className={s.statisticsItem}>Neutral: {neutral}</p>\n      <p className={s.statisticsItem}>Bad: {bad}</p>\n      <p className={s.statisticsItem}>Total: {total}</p>\n      <p className={s.statisticsItem}>\n        Positive feedback: {positivePercentage}%\n      </p>\n    </section>\n  );\n};\n\nStatictics.propTypes = {\n  good: propTypes.string.isRequired,\n  neutral: propTypes.string.isRequired,\n  bad: propTypes.string.isRequired,\n  total: propTypes.string.isRequired,\n  positivePercentage: propTypes.string.isRequired,\n};\n\nexport default Statictics;\n","import propTypes from 'prop-types';\n\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div>\n      {options.map(option => (\n        <button\n          className={s.button}\n          type=\"button\"\n          data-name={option}\n          onClick={onLeaveFeedback}\n          key={Object.keys(options)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: propTypes.arrayOf(propTypes.string).isRequired,\n  onLeaveFeedback: propTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import propTypes from 'prop-types';\n\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.container}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: propTypes.string.isRequired,\n  children: propTypes.node.isRequired,\n};\n\nexport default Section;\n","import propTypes from 'prop-types';\n\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={s.text}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: propTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useState } from 'react';\nimport Statictics from './Statistics/Statistics';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Section from './Section/Section';\nimport Notification from './Notification/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = ({ target }) => {\n    const name = target.dataset.name;\n    if (name === 'good') {\n      setGood(good => good + 1);\n    } else if (name === 'neutral') {\n      setNeutral(neutral => neutral + 1);\n    } else if (name === 'bad') {\n      setBad(bad => bad + 1);\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = total => {\n    return Math.round((good / total) * 100);\n  };\n\n  const total = countTotalFeedback();\n  const isShowStatistics = total > 0;\n  const positiveFeedbackPercentage = countPositiveFeedbackPercentage(total);\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {isShowStatistics ? (\n          <Statictics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positiveFeedbackPercentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}